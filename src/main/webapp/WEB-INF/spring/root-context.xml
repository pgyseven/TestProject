<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
      http://mybatis.org/schema/mybatis-spring 
      http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- transaction처리를 annotation 으로 진행하겠다. -->
	<tx:annotation-driven />
	<!-- my sql 데이터베이스 연결 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		lazy-init="false">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/pgy?useSSL=false">
		</property>

		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>

	<!-- log4jdbc 이용시 시스템 부하를 많이 먹음 항상 메모리에 띄어두면 메모리 털림 <bean id="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="false"> 
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property> 
		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/pgy?useSSL=false"> 
		</property> <property name="username" value="root"></property> <property 
		name="password" value="1234"></property> </bean> -->

	<!-- Mybatis 객체 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>


		<property name="configLocation"
			value="classpath:/mybatis-config.xml">
		</property>

		<property name="mapperLocations"
			value="classpath:/mappers/**/*Mapper.xml">
		</property>
	</bean>

	<!-- SqlSessionTemplate 객체 : (jdbc에서의 Connection, PrepareStatement, 쿼리문 
		실행, 결과 가져오기, clost 등의 작업을 수행해주는 객체) -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- 아래의 패키지를 조사(scan)하여 필요한 객체들을 메모리에 적재하여 동작하도록 한다. 아래와 같이 얘가 알수 있음 이러면 
		서비스 보드에 @Service를 인지하여 beans graph에 보이기 시작함 -->
	<context:component-scan
		base-package="com.miniproj.service.hboard"></context:component-scan>
	<context:component-scan
		base-package="com.miniproj.persistence"></context:component-scan>
	<context:component-scan
		base-package="com.miniproj.util"></context:component-scan>
			<context:component-scan
		base-package="com.miniproj.service.member"></context:component-scan>
		<context:component-scan
		base-package="com.miniproj.reply"></context:component-scan>


</beans>


